import { sql } from "drizzle-orm";
import { pgTable, uuid, jsonb, time, timestamp } from "drizzle-orm/pg-core";

export const stripeEvents = pgTable("stripe_events", {
    uuid: uuid("uuid")
        .primaryKey()
        .default(sql`gen_random_uuid()`),

    event: jsonb("event"),
    createdAt: timestamp("createdAt").defaultNow().notNull(),
});

export type StripeEvent = typeof stripeEvents.$inferSelect;
export type NewStripeEvent = typeof stripeEvents.$inferInsert;

export enum StripeWebhookEventType {
    AccountUpdated = 'account.updated',
    AccountApplicationAuthorized = 'account.application.authorized',
    AccountApplicationDeauthorized = 'account.application.deauthorized',
    AccountExternalAccountCreated = 'account.external_account.created',
    AccountExternalAccountDeleted = 'account.external_account.deleted',
    AccountExternalAccountUpdated = 'account.external_account.updated',
    BalanceAvailable = 'balance.available',
    CapabilityUpdated = 'capability.updated',
    ChargeCaptured = 'charge.captured',
    ChargeExpired = 'charge.expired',
    ChargeFailed = 'charge.failed',
    ChargePending = 'charge.pending',
    ChargeRefunded = 'charge.refunded',
    ChargeSucceeded = 'charge.succeeded',
    ChargeUpdated = 'charge.updated',
    ChargeDisputeClosed = 'charge.dispute.closed',
    ChargeDisputeCreated = 'charge.dispute.created',
    ChargeDisputeFundsReinstated = 'charge.dispute.funds_reinstated',
    ChargeDisputeFundsWithdrawn = 'charge.dispute.funds_withdrawn',
    ChargeDisputeUpdated = 'charge.dispute.updated',
    ChargeRefundUpdated = 'charge.refund.updated',
    CheckoutSessionAsyncPaymentFailed = 'checkout.session.async_payment_failed',
    CheckoutSessionAsyncPaymentSucceeded = 'checkout.session.async_payment_succeeded',
    CheckoutSessionCompleted = 'checkout.session.completed',
    CouponCreated = 'coupon.created',
    CouponDeleted = 'coupon.deleted',
    CouponUpdated = 'coupon.updated',
    CustomerCreated = 'customer.created',
    CustomerDeleted = 'customer.deleted',
    CustomerUpdated = 'customer.updated',
    CustomerDiscountCreated = 'customer.discount.created',
    CustomerDiscountDeleted = 'customer.discount.deleted',
    CustomerDiscountUpdated = 'customer.discount.updated',
    CustomerSourceCreated = 'customer.source.created',
    CustomerSourceDeleted = 'customer.source.deleted',
    CustomerSourceExpiring = 'customer.source.expiring',
    CustomerSourceUpdated = 'customer.source.updated',
    CustomerSubscriptionCreated = 'customer.subscription.created',
    CustomerSubscriptionDeleted = 'customer.subscription.deleted',
    CustomerSubscriptionPaused = 'customer.subscription.paused',
    CustomerSubscriptionPendingUpdateApplied = 'customer.subscription.pending_update_applied',
    CustomerSubscriptionPendingUpdateExpired = 'customer.subscription.pending_update_expired',
    CustomerSubscriptionResumed = 'customer.subscription.resumed',
    CustomerSubscriptionTrialWillEnd = 'customer.subscription.trial_will_end',
    CustomerSubscriptionUpdated = 'customer.subscription.updated',
    CustomerTaxIdCreated = 'customer.tax_id.created',
    CustomerTaxIdDeleted = 'customer.tax_id.deleted',
    CustomerTaxIdUpdated = 'customer.tax_id.updated',
    FileCreated = 'file.created',
    InvoiceCreated = 'invoice.created',
    InvoiceDeleted = 'invoice.deleted',
    InvoiceFinalized = 'invoice.finalized',
    InvoiceMarkedUncollectible = 'invoice.marked_uncollectible',
    InvoicePaid = 'invoice.paid',
    InvoicePaymentActionRequired = 'invoice.payment_action_required',
    InvoicePaymentFailed = 'invoice.payment_failed',
    InvoicePaymentSucceeded = 'invoice.payment_succeeded',
    InvoiceSent = 'invoice.sent',
    InvoiceUpcoming = 'invoice.upcoming',
    InvoiceUpdated = 'invoice.updated',
    InvoiceVoided = 'invoice.voided',
    InvoiceItemCreated = 'invoiceitem.created',
    InvoiceItemDeleted = 'invoiceitem.deleted',
    InvoiceItemUpdated = 'invoiceitem.updated',
    IssuingAuthorizationCreated = 'issuing_authorization.created',
    IssuingAuthorizationRequest = 'issuing_authorization.request',
    IssuingAuthorizationUpdated = 'issuing_authorization.updated',
    IssuingCardCreated = 'issuing_card.created',
    IssuingCardUpdated = 'issuing_card.updated',
    IssuingCardholderCreated = 'issuing_cardholder.created',
    IssuingCardholderUpdated = 'issuing_cardholder.updated',
    PaymentIntentAmountCapturableUpdated = 'payment_intent.amount_capturable_updated',
    PaymentIntentCanceled = 'payment_intent.canceled',
    PaymentIntentCreated = 'payment_intent.created',
    PaymentIntentPartiallyFunded = 'payment_intent.partially_funded',
    PaymentIntentPaymentFailed = 'payment_intent.payment_failed',
    PaymentIntentProcessing = 'payment_intent.processing',
    PaymentIntentRequiresAction = 'payment_intent.requires_action',
    PaymentIntentSucceeded = 'payment_intent.succeeded',
    PaymentMethodAttached = 'payment_method.attached',
    PaymentMethodAutomaticallyUpdated = 'payment_method.automatically_updated',
    PaymentMethodDetached = 'payment_method.detached',
    PaymentMethodUpdated = 'payment_method.updated',
    PayoutCanceled = 'payout.canceled',
    PayoutCreated = 'payout.created',
    PayoutFailed = 'payout.failed',
    PayoutPaid = 'payout.paid',
    PayoutReconciliationCompleted = 'payout.reconciliation_completed',
    PayoutUpdated = 'payout.updated',
    PlanCreated = 'plan.created',
    PlanDeleted = 'plan.deleted',
    PlanUpdated = 'plan.updated',
    ProductCreated = 'product.created',
    ProductDeleted = 'product.deleted',
    ProductUpdated = 'product.updated',
    RadarEarlyFraudWarningCreated = 'radar.early_fraud_warning.created',
    RadarEarlyFraudWarningUpdated = 'radar.early_fraud_warning.updated',
    RefundCanceled = 'refund.canceled',
    RefundCreated = 'refund.created',
    RefundUpdated = 'refund.updated',
    ReviewClosed = 'review.closed',
    ReviewOpened = 'review.opened',
    SetupIntentCanceled = 'setup_intent.canceled',
    SetupIntentCreated = 'setup_intent.created',
    SetupIntentRequiresAction = 'setup_intent.requires_action',
    SetupIntentSetupFailed = 'setup_intent.setup_failed',
    SetupIntentSucceeded = 'setup_intent.succeeded',
    SubscriptionScheduleAborted = 'subscription_schedule.aborted',
    SubscriptionScheduleCanceled = 'subscription_schedule.canceled',
    SubscriptionScheduleCompleted = 'subscription_schedule.completed',
    SubscriptionScheduleCreated = 'subscription_schedule.created',
    SubscriptionScheduleExpiring = 'subscription_schedule.expiring',
    SubscriptionScheduleReleased = 'subscription_schedule.released',
    SubscriptionScheduleUpdated = 'subscription_schedule.updated',
    TaxRateCreated = 'tax_rate.created',
    TaxRateUpdated = 'tax_rate.updated',
    TopupCanceled = 'topup.canceled',
    TopupCreated = 'topup.created',
    TopupFailed = 'topup.failed',
    TopupReversed = 'topup.reversed',
    TopupSucceeded = 'topup.succeeded',
    TransferCreated = 'transfer.created',
    TransferFailed = 'transfer.failed',
    TransferPaid = 'transfer.paid',
    TransferReversed = 'transfer.reversed',
    TransferUpdated = 'transfer.updated',
}

